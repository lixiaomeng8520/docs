Linux
=====

镜像
----

* `清华大学开源软件镜像站 <https://mirrors.tuna.tsinghua.edu.cn/>`_
* `阿里巴巴 OPSX 软件仓库 <https://opsx.alibaba.com/mirror>`_
* `科大开源镜像站 <http://mirrors.ustc.edu.cn/>`_

Centos
^^^^^^

centos

.. code-block:: bash

    cat > /etc/yum.repos.d/centos.repo <<EOF
    [base]
    name=CentOS-7 - Base
    baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/7/os/\$basearch/
    gpgcheck=1
    gpgkey=https://mirrors.tuna.tsinghua.edu.cn/centos/RPM-GPG-KEY-CentOS-7

    #released updates
    [updates]
    name=CentOS-7 - Updates
    baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/7/updates/\$basearch/
    gpgcheck=1
    gpgkey=https://mirrors.tuna.tsinghua.edu.cn/centos/RPM-GPG-KEY-CentOS-7

    #additional packages that may be useful
    [extras]
    name=CentOS-7 - Extras
    baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos/7/extras/\$basearch/
    gpgcheck=1
    gpgkey=https://mirrors.tuna.tsinghua.edu.cn/centos/RPM-GPG-KEY-CentOS-7
    EOF

epel

.. code-block:: bash

    cat > /etc/yum.repos.d/epel.repo <<EOF
    [epel]
    name=epel
    baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/\$basearch
    enabled=1
    gpgcheck=1
    gpgkey=https://mirrors.tuna.tsinghua.edu.cn/epel/RPM-GPG-KEY-EPEL-7
    EOF

ius

.. code-block:: bash

    cat > /etc/yum.repos.d/ius.repo <<EOF
    [ius-stable]
    name=ius - stable
    baseurl=https://mirrors.tuna.tsinghua.edu.cn/ius/stable/CentOS/7/\$basearch
    enabled=1
    gpgcheck=1
    gpgkey=https://mirrors.tuna.tsinghua.edu.cn/ius/IUS-COMMUNITY-GPG-KEY
    EOF

docker

.. code-block:: bash

    cat > /etc/yum.repos.d/docker.repo <<EOF
    [docker-ce-stable]
    name=Docker CE Stable - \$basearch
    baseurl=https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/7/\$basearch/stable
    enabled=1
    gpgcheck=1
    gpgkey=https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/gpg
    EOF

mongodb

.. code-block:: bash

    cat > /etc/yum.repos.d/mongodb.repo <<EOF
    [mongodb-org]
    name=MongoDB Repository
    baseurl=https://mirrors.tuna.tsinghua.edu.cn/mongodb/yum/el7/
    gpgcheck=0
    enabled=1
    EOF

Debian
^^^^^^

debian

.. code-block:: bash

    cat > /etc/apt/sources.list <<EOF
    deb http://mirrors.163.com/debian/ stretch main non-free contrib
    deb http://mirrors.163.com/debian/ stretch-updates main non-free contrib
    deb http://mirrors.163.com/debian/ stretch-backports main non-free contrib
    deb-src http://mirrors.163.com/debian/ stretch main non-free contrib
    deb-src http://mirrors.163.com/debian/ stretch-updates main non-free contrib
    deb-src http://mirrors.163.com/debian/ stretch-backports main non-free contrib
    deb http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib
    deb-src http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib
    EOF

命令
----

参考资料

* `linux命令大全 <http://www.runoob.com/linux/linux-command-manual.html>`_
* `​linux系统排查​ <https://www.cnblogs.com/Security-Darren/p/4685629.html>`_

curl
^^^^

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 下载                       | ``curl -L url -o target``                                      |
+----------------------------+----------------------------------------------------------------+
| POST请求                   | ``curl -X POST -H Content-Type:text/html url -d postdata``     |
+----------------------------+----------------------------------------------------------------+

ssh
^^^

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 生成密钥                   | ``ssh-keygen -t rsa``                                          |
+----------------------------+----------------------------------------------------------------+
| 拷贝默认公钥到远程主机     | ``ssh-copy-id root@master``                                    |
+----------------------------+----------------------------------------------------------------+
| 拷贝指定公钥到远程主机     | ``ssh-copy-id -i ~/.ssh/id_rsa.pub root@master``               |
+----------------------------+----------------------------------------------------------------+

yum
^^^

远程仓库的软件包信息

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 清理缓存                   | ``yum clean all``                                              |
+----------------------------+----------------------------------------------------------------+
| 生成缓存                   | ``yum makecache``                                              |
+----------------------------+----------------------------------------------------------------+
| 查看仓库列表               | ``yum repolist``                                               |
+----------------------------+----------------------------------------------------------------+
| 查看一个包信息             | ``yum info php71u-cli``                                        |
+----------------------------+----------------------------------------------------------------+
| 查看一个包依赖             | ``yum deplist php71u-cli``                                     |
+----------------------------+----------------------------------------------------------------+
| 查看一个文件属于哪个包     | ``yum provides netstat``                                       |
+----------------------------+----------------------------------------------------------------+

rpm
^^^

本地的软件包信息

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 查询php71u是否安装         | ``rpm -q php71u-fpm``                                          |
+----------------------------+----------------------------------------------------------------+
| 查看php71u包信息           | ``rpm -qi php71u-fpm``                                         |
+----------------------------+----------------------------------------------------------------+
| 列出php71u包含的文件       | ``rpm -ql php71u-fpm``                                         |
+----------------------------+----------------------------------------------------------------+
| 查看filename属于哪个rpm包  | ``rpm -qf filename``                                           |
+----------------------------+----------------------------------------------------------------+

tar
^^^
压缩的哪些文件，是相对于-C参数的，如果没有，则是当前目录。

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 解压到当前文件夹           | ``tar zxvf xx.tar.gz``                                         |
+----------------------------+----------------------------------------------------------------+
| 解压到指定文件夹           | ``tar -zxvf xx.tar.gz -C dir``                                 |
+----------------------------+----------------------------------------------------------------+
| 列出包文件                 | ``tar -ztvf xx.tar.gz``                                        |
+----------------------------+----------------------------------------------------------------+
| 全部文件压缩               | ``tar -zcvf xx.tar.gz [-C /dir] .``                            |
+----------------------------+----------------------------------------------------------------+
| 指定文件（夹）压缩         | ``tar -zcvf xx.tar.gz [-C /dir] b/ a.txt``                     |
+----------------------------+----------------------------------------------------------------+

wc
^^

利用wc指令我们可以计算文件的Byte数、字数、或是列数，若不指定文件名称、或是所给予的文件名为"-"，则wc指令会从标准输入设备读取数据。

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 统计文件信息               | ``wc file``                                                    |
+----------------------------+----------------------------------------------------------------+
| 显示file文件行数           | ``wc -l file``                                                 |
+----------------------------+----------------------------------------------------------------+
| 显示文件单词数             | ``wc -w file``                                                 |
+----------------------------+----------------------------------------------------------------+
| 显示文件byte数             | ``wc -c file``                                                 |
+----------------------------+----------------------------------------------------------------+
| 统计普通文件个数           | ``ls -l dir | grep '^-' | wc -l``                              |
+----------------------------+----------------------------------------------------------------+
| 统计目录个数               | ``ls -l dir | grep '^d' | wc -l``                              |
+----------------------------+----------------------------------------------------------------+
| 递归统计普通文件个数       | ``ls -lR dir | grep '^-' | wc -l``                             |
+----------------------------+----------------------------------------------------------------+

sed
^^^

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 全局替换                   | ``sed -i 's/原字符串/替换字符串/g' file``                      |
+----------------------------+----------------------------------------------------------------+

rz, sz
^^^^^^

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 从windows接收文件          | ``rz``                                                         |
+----------------------------+----------------------------------------------------------------+
| 发送文件a.txt到windows     | ``sz a.txt``                                                   |
+----------------------------+----------------------------------------------------------------+

netstat
^^^^^^^

netstat 是一款命令行工具，可用于列出系统上所有的网络套接字连接情况，包括 tcp, udp 以及 unix 套接字，另外它还能列出处于监听状态（即等待接入请求）的套接字。

.. code-block:: bash

    -l 监听中
    -a 所有
    -t tcp
    -u udp
    -n 禁用域名解析
    -p 进程
    -e 用户

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 正在监听的tcp              | ``netstat -ntlpe``                                             |
+----------------------------+----------------------------------------------------------------+

nmcli
^^^^^

+----------------------------+-----------------------------------------------------------------------------------------------------+
| 描述                       | 命令                                                                                                |
+============================+=====================================================================================================+
| 查看所有设备               | ``nmcli d``                                                                                         |
+----------------------------+-----------------------------------------------------------------------------------------------------+
| 查看所有连接               | ``nmcli c``                                                                                         |
+----------------------------+-----------------------------------------------------------------------------------------------------+
| 查看连接详情               | ``nmcli c show static``                                                                             |
+----------------------------+-----------------------------------------------------------------------------------------------------+
| 添加dhcp连接               | ``nmcli c add con-name dhcp type ethernet ifname enp0s3``                                           |
+----------------------------+-----------------------------------------------------------------------------------------------------+
| 添加static连接             | ``nmcli c add con-name static type ethernet ifname enp0s3 ip4 192.168.56.20/24 gw4 192.168.56.1``   |
+----------------------------+-----------------------------------------------------------------------------------------------------+
| 修改连接属性，参考show     | ``nmcli c mod con-name ipv4.addresses 192.168.56.20/24``                                            |
+----------------------------+-----------------------------------------------------------------------------------------------------+
| 修改连接为静态连接         | ``nmcli c mod con-name ipv4.method manual``                                                         |
+----------------------------+-----------------------------------------------------------------------------------------------------+
| 启动连接                   | ``nmcli c up con-name``                                                                             |
+----------------------------+-----------------------------------------------------------------------------------------------------+
| 关闭连接                   | ``nmcli c up con-name``                                                                             |
+----------------------------+-----------------------------------------------------------------------------------------------------+

2>&1
^^^^

希望将标准错误和标准输出都重定向到一个文件中，那么不要分别重定向，因为会打开文件两次，下面是将标准错误重定向到标准输出，再由标准输出重定向到文件。

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 将输出和错误重定向到a.log  | ``command > a.log 2>&1``                                       |
+----------------------------+----------------------------------------------------------------+

ln
^^

参考：`5分钟让你明白“软链接”和“硬链接”的区别 <https://www.jianshu.com/p/dde6a01c4094>`_

.. note::

    删除目录软链，目录最后不能带\/，否则会把原目录里的文件都给删了，软链却不会删
    
    目前不用硬链

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 创建一个软链               | ``ln -s source target``                                        |
+----------------------------+----------------------------------------------------------------+
| 删除一个文件软链           | ``rm -rf target``                                              |
+----------------------------+----------------------------------------------------------------+
| 删除一个目录软链           | ``rm -rf target``                                              |
+----------------------------+----------------------------------------------------------------+

rsync
^^^^^

文件或目录会在to下面新建 

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 同步增长一个文件（目录）   | ``rsync -av from to``                                          |
+----------------------------+----------------------------------------------------------------+
| 同步删除一个文件（目录）   | ``rsync -av --delete from to``                                 |
+----------------------------+----------------------------------------------------------------+

crontab
^^^^^^^

`验证 <https://tool.lu/crontab/>`_

.. code-block:: bash

    *   *   *   *   *   command
    
pwgen
^^^^^

+----------------------------+----------------------------------------------------------------+
| 描述                       | 命令                                                           |
+============================+================================================================+
| 生成一个32位密码           | ``pwgen -1 32``                                                |
+----------------------------+----------------------------------------------------------------+

shell
-----

变量
^^^^

* `Shell特殊变量：Shell $0, $#, $*, $@, $?, $$和命令行参数 <http://www.cnblogs.com/davygeek/p/5670212.html>`_
  
+------+--------------------------------------------------------------------------------------+
| 变量 | 含义                                                                                 |
+======+======================================================================================+
| $0   | 当前脚本的文件名                                                                     |
+------+--------------------------------------------------------------------------------------+
| $n   | 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。                               |
+------+--------------------------------------------------------------------------------------+
| $#   | 传递给脚本或函数的参数个数。                                                         |
+------+--------------------------------------------------------------------------------------+
| $\*  | 传递给脚本或函数的所有参数。被双引号(" ")包含时，结果被当做整体。                    |
+------+--------------------------------------------------------------------------------------+
| $@   | 传递给脚本或函数的所有参数。                                                         |
+------+--------------------------------------------------------------------------------------+
| $?   | 上个命令的退出状态，或函数的返回值。                                                 |
+------+--------------------------------------------------------------------------------------+
| $$   | 当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。                         |
+------+--------------------------------------------------------------------------------------+

括号
^^^^

* `shell中各种括号的作用()、(())、[]、[[]]、{} <https://blog.csdn.net/michaelwubo/article/details/52249689>`_

运算符
^^^^^^

* `Shell 基本运算符 <http://www.runoob.com/linux/linux-shell-basic-operators.html>`_

流程控制
^^^^^^^^

* `Shell 流程控制 <http://www.runoob.com/linux/linux-shell-process-control.html>`_

if

.. code-block:: bash

    if condition
    then
        command1 
        command2
        ...
        commandN 
    fi

if else

.. code-block:: bash

    if condition
    then
        command1 
        command2
        ...
        commandN
    else
        command
    fi

if else-if else

.. code-block:: bash

    if condition1
    then
        command1
    elif condition2 
    then 
        command2
    else
        commandN
    fi

for

.. code-block:: bash

    for var in item1 item2 ... itemN
    do
        command1
        command2
        ...
        commandN
    done

    # oneline
    for var in item1 item2 ... itemN; do command1; command2… done;

while

.. code-block:: bash

    while condition
    do
        command
    done

case

.. code-block:: bash

    case 值 in
    模式1)
        command1
        command2
        ...
        commandN
        ;;
    模式2）
        command1
        command2
        ...
        commandN
        ;;
    esac